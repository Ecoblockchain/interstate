/*global red */

(function(red) {
	"use strict";

	var env = red.create("environment");
	env
.set("button", "<stateful>")
.cd("button")
	.rename_state("INIT", "idle")
	.add_state("hover")
	.add_state("active")
	.add_state("active_out")
	.add_transition("idle", "hover", "on('mouseover', this)")
	.add_transition("hover", "idle", "on('mouseout', this)")
	.add_transition("hover", "active", "on('mousedown', this)")
	.add_transition("active", "hover", "on('mouseup')")
	.add_transition("active", "active_out", "on('mouseout', this)")
	.add_transition("active_out", "active", "on('mouseover', this)")
	.add_transition("active_out", "idle", "on('mouseup')")
	.set("(prototypes)", "idle", "[dom]")
	.top()
.set("attr", "<dict>")
.cd("attr")
	.set("class", "'player'")
	.up()
.cd("child_nodes")
	.set("playlists", "<stateful>")
	.cd("playlists")
		.set("(prototypes)", "INIT", "[dom]")
		.set("tag")
		.set("tag", "INIT", "'div'")
		.set("css", "<dict>")
		.cd("css")
			.set("float", "'left'")
			.set("width", "'120px'")
			.set("height", "'362px'")
			.up()
		.set("child_nodes", "<dict>")
		.cd("child_nodes")
			.set("ptext", "<stateful>")
			.cd("ptext")
				.set("(prototypes)", "INIT", "[dom]")
				.set("tag")
				.set("tag", "INIT", "'div'")
				.set("text", "'Playlists:'")
				.set("css", "<dict>")
				.cd("css")
					.set("padding-top", "'60px'")
					.set("font-weight", "'bold'")
					.up()
				.up()
			.set("plist", "<stateful>")
			.cd("plist")
				.rename_state("INIT", "not_selected")
				.add_state("selected")
				.add_transition("not_selected", "selected", "selection_info.selected_plist === this")
				.add_transition("selected", "not_selected", "selection_info.selected_plist !== this")
				.set("(prototypes)", "not_selected", "[dom]")
				.set("(copies)", "['80s Music', 'Rock', 'Workout']")
				.set("tag")
				.set("tag", "not_selected", "'div'")
				.set("text", "my_copy")
				.set("css", "<dict>")
				.cd("css")
					.up()
				.set("attr", "<dict>")
				.cd("attr")
					.set("class", "<stateful_prop>")
					.set("class", "not_selected", "'song'")
					.set("class", "selected", "'selected song'")
					.up()
				.up()
			.up()
		.up()
	.set("header", "<stateful>")
	.cd("header")
		.set("(prototypes)", "INIT", "[dom]")
		.set("tag")
		.set("tag", "INIT", "'div'")
		.set("attr", "<dict>")
		.cd("attr")
			.set("class", "<stateful_prop>")
			.set("class", "INIT", "'header'")
			.up()
		.set("child_nodes", "<dict>")
		.cd("child_nodes")
			.set("prev_button", "<stateful>")
			.cd("prev_button")
				.set("(prototypes)", "INIT", "[button]")
				.set("tag")
				.set("tag", "INIT", "'img'")
				.set("attr", "<dict>")
				.cd("attr")
					.set("src", "<stateful_prop>")
					.set("src", "idle", "'buttons/prev.png'")
					.set("src", "hover", "'buttons/prev.png'")
					.set("src", "active", "'buttons/prev_active.png'")
					.set("src", "active_out", "'buttons/prev.png'")
					.up()
				.up()
			.set("play_button", "<stateful>")
			.cd("play_button")
				.set("(prototypes)", "INIT", "[button]")
				.set("tag")
				.set("tag", "INIT", "'img'")
				.set("attr", "<dict>")
				.cd("attr")
					.set("src", "<stateful_prop>")
					.set("src", "idle", "'buttons/play.png'")
					.set("src", "hover", "'buttons/play.png'")
					.set("src", "active", "'buttons/play_active.png'")
					.set("src", "active_out", "'buttons/play.png'")
					.up()
				.up()
			.set("next_button", "<stateful>")
			.cd("next_button")
				.set("(prototypes)", "INIT", "[button]")
				.set("tag")
				.set("tag", "INIT", "'img'")
				.set("attr", "<dict>")
				.cd("attr")
					.set("src", "<stateful_prop>")
					.set("src", "idle", "'buttons/next.png'")
					.set("src", "hover", "'buttons/next.png'")
					.set("src", "active", "'buttons/next_active.png'")
					.set("src", "active_out", "'buttons/next.png'")
					.up()
				.up()
			.up()
		.up()
	.set("albums", "<stateful>")
	.cd("albums")
		.up()
	.set("songs", "<stateful>")
	.cd("songs")
		.set("(prototypes)", "INIT", "[dom]")
		.set("tag")
		.set("tag", "INIT", "'div'")
		.set("attr", "<dict>")
		.cd("attr")
			.set("class", "<stateful_prop>")
			.set("class", "INIT", "'songs'")
			.up()
		.set("child_nodes", "<dict>")
		.cd("child_nodes")
			.set("song_view", "<stateful>")
			.cd("song_view")
				.rename_state("INIT", "not_selected")
				.add_state("selected")
				.add_transition("not_selected", "selected", "selection_info.selected_song === this")
				.add_transition("selected", "not_selected", "selection_info.selected_song !== this")
				.set("(prototypes)", "not_selected", "[dom]")
				.set("(copies)", "get_songs(selection_info.selected_plist)")
				.set("attr", "<dict>")
				.cd("attr")
					.set("class", "<stateful_prop>")
					.set("class", "not_selected", "'song'")
					.set("class", "selected", "'selected song'")
					.up()
				.set("tag")
				.set("tag", "not_selected", "'div'")
				.set("child_nodes", "<dict>")
				.cd("child_nodes")
					.set("song_name", "<dict>")
					.cd("song_name")
						.set("(prototypes)", "[dom]")
						.set("tag", "'span'")
						.set("text", "my_copy.name")
						.set("attr", "<dict>")
						.cd("attr")
							.set("class", "'name'")
							.up()
						.up()
					.set("artist", "<dict>")
					.cd("artist")
						.set("(prototypes)", "[dom]")
						.set("tag", "'span'")
						.set("text", "my_copy.artist")
						.set("attr", "<dict>")
						.cd("attr")
							.set("class", "'artist'")
						.up()
					.up()
				.set("duration", "<dict>")
				.cd("duration")
					.set("(prototypes)", "[dom]")
					.set("tag", "'span'")
					.set("text", "my_copy.duration")
					.set("attr", "<dict>")
					.cd("attr")
						.set("class", "'duration'")
						.up()
					.up()
				.top()
	.set("selection_info", "<stateful>")
	.cd("selection_info")
		.add_transition("INIT", "INIT", "on('mousedown', root.child_nodes.songs.child_nodes.song_view)")
		.set("selected_song")
		.set("selected_song", "INIT -0> INIT", "event.red_target")
		.add_transition("INIT", "INIT", "on('mousedown', root.child_nodes.playlists.child_nodes.plist)")
		.set("selected_plist")
		.set("selected_plist", "INIT -1> INIT", "event.red_target")
		.top()
	.set("get_songs", get_songs)
;

	red.on_sample_app_ready(env.get_root());
}(red));
